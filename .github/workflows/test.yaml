name: Test and Build project

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn
    - run: yarn build
    - run: yarn test
  docker-service:
    name: Build dockerized services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push functions
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/services/service.dockerfile
          platforms: linux/amd64
          push: false
          tags: ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
          build-args: |
            APP_NAME=${{ matrix.app }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main